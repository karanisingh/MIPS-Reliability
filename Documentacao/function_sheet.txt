Functions to be created for this whole mess

Considerations:

- Function to check which assembly command is present in the read line

- Each command will have its own function that will receive a string with the complete command in assembly (ex: add $s0,$s1,$s2), and will return a string of 33 positions with the same command, in binary. Will the output be by reference or by value? (think about your fagots).

-done [0.3.10.3] charTo5BitsU function that receives an integer in char, and returns a char with the same number in 5-bit binary Unsigned, Range: [0,31]

-done[0.3.10.6]charTo16BitsU function that receives an integer in char, and returns a char with the same number in 16-bit binary Unsigned, Range: [-32768,32767]

-done[0.3.10.9] charTo16BitsU function that receives an integer in char, and returns a char with the same number in 16-bit binary in 2's complement, Range: [0.65535]
(I added one more point just because it was a part of 3 functions, once finished it will be version [0.3.11])

done [0.3.7] - A function to transform a struct into an array with all fields, already in sequence. (Note: This function will be different for each type of struct)
*NOTE: At least using Global Variables, instead of struct.

- Function to convert a string that represents a number, and returns a binary string of 5+1 digits (pro shamt)

- Function to convert a string that represents a number, and returns a binary string in 2's complement, with 16+1 digits (for type I functions)

- Function to convert a string that represents a number, and returns a binary string in sign magnitude, of 16+1 digits (for type I functions)

done [0.3.6] - RegisterToBinary() function to check which register will be used