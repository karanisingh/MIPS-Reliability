================================================================================================================
==========================================         Cycle=14007         ========================================

 ### Registers ###
$zero   (00000): d0, (b00000000000000000000000000000000)
$v0     (00010): d0, (b00000000000000000000000000000000)
$t0     (01000): d0, (b00000000000000000000011111010000)
$t1     (01001): d2000, (b00000000000000000000000000000000)
$t2     (01010): d0, (b00000000000000000000011111010000)
$t3     (01011): d2000, (b00000000000000000000000000000001)
$t8     (11000): d4, (b00000000000000000000000000000100)
$t9     (11001): d999000, (b00000000000011110011111001011000)

 ### DataMemory ###
Mem Addr: 1 - Data: d999000 (b00000000000011110011111001011000)
Mem Addr: 2 - Data: d0 (b00000000000000000000000000000000)
Mem Addr: 3 - Data: d0 (b00000000000000000000000000000000)
Mem Addr: 4 - Data: d0 (b00000000000000000000000000000000)




------------------=INSTRUCTION FETCH=------------------
Instruction 15:
addi $v0, $zero, 32 --> (00100000010000000000000000100000)


------------------=INSTRUCTION DECODE=------------------
I-Type: addi
RS:00010
RT:00000
RD:00000
Shamt:00000
Funct:100000
immed: d32 (b0000000000100000)
Address: d4194336 (b00010000000000000000100000)
Sign extender: extends 0000000000100000 to 00000000000000000000000000100000


------------------=EXECUTE=------------------
Reg1Out: 00000000000000000000000000000000
Reg2Out: 00000000000000000000000000000000

Alu
        Alu1:d0 = b00000000000000000000000000000000 (from reg1out)
        Alu2: d32 = b00000000000000000000000000100000 (from signExtend)
        ALU Operation:  add --> 0 + 32
AluOut: 32
AluZero: 0
Not BRANCHING, next
program counter = 16


------------------=MEMORY=------------------


------------------=WRITEBACK=------------------
Writing d32 (b00000000000000000000000000100000) to register $v0






###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###


---------------------------------------== Final Results ==---------------------------------------


 ### Registers ###
$zero   (00000): d0, (b00000000000000000000000000000000)
$v0     (00010): d32, (b00000000000000000000000000100000)
$t0     (01000): d0, (b00000000000000000000011111010000)
$t1     (01001): d2000, (b00000000000000000000000000000000)
$t2     (01010): d0, (b00000000000000000000011111010000)
$t3     (01011): d2000, (b00000000000000000000000000000001)
$t8     (11000): d4, (b00000000000000000000000000000100)
$t9     (11001): d999000, (b00000000000011110011111001011000)

 ### DataMemory ###
Mem Addr: 1 - Data: d999000 (b00000000000011110011111001011000)
Mem Addr: 2 - Data: d0 (b00000000000000000000000000000000)
Mem Addr: 3 - Data: d0 (b00000000000000000000000000000000)
Mem Addr: 4 - Data: d0 (b00000000000000000000000000000000)